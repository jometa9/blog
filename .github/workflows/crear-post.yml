name: Crear Post desde Issue Form

on:
  issues:
    types: [opened, edited]

jobs:
  crear-post:
    runs-on: ubuntu-latest

    # Solo se ejecuta si el issue tiene la etiqueta 'new-post'
    if: contains(join(github.event.issue.labels.*.name, ','), 'new-post')

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Crear archivo a partir del Issue Form
        run: |
          # Capturamos el body del issue
          BODY="${{ github.event.issue.body }}"

          # Mostramos el body con caracteres invisibles, para depurar:
          echo "=== Body con cat -A (debug) ==="
          echo "$BODY" | cat -A
          echo "================================"

          # Función: busca la línea EXACTA "### <campo>" y lee la siguiente
          # Usamos sed para eliminar \r y espacios al final.
          function get_value_after_heading() {
            local heading="^### $1$"  # Por ejemplo, ^### Título$
            echo "$BODY" \
              | sed 's/\r//g' \           # quita posibles \r de Windows
              | sed 's/[ \t]*$//g' \      # quita espacios/tabs al final de cada línea
              | awk -v heading="$heading" '
                  $0 ~ heading {
                    getline
                    # eliminamos \r (por si quedara alguno)
                    gsub(/\r$/, "", $0)
                    print $0
                    exit
                  }
                '
          }

          # Extraemos los campos tal como aparecen en el body
          TITLE=$(get_value_after_heading "Título")
          DATE=$(get_value_after_heading "Fecha")
          VISIBLE=$(get_value_after_heading "Visible")
          QUOTE=$(get_value_after_heading "Quote")
          SLUG=$(get_value_after_heading "Slug")
          YOUTUBE=$(get_value_after_heading "ID de YouTube")

          echo "TITLE=$TITLE"
          echo "DATE=$DATE"
          echo "VISIBLE=$VISIBLE"
          echo "QUOTE=$QUOTE"
          echo "SLUG=$SLUG"
          echo "YOUTUBE=$YOUTUBE"

          # Creamos un nombre de archivo (opcional)
          DATESTAMP=$(date +%Y-%m-%d-%H-%M-%S)
          FILENAME="${DATESTAMP}-${SLUG}.md"

          # Creamos la carpeta 'posts' si no existe
          mkdir -p posts

          # Generamos el contenido en el archivo .md
          echo "---"                  >  "posts/$FILENAME"
          echo "title: $TITLE"       >> "posts/$FILENAME"
          echo "date: $DATE"         >> "posts/$FILENAME"
          echo "visible: $VISIBLE"   >> "posts/$FILENAME"
          echo "quote: $QUOTE"       >> "posts/$FILENAME"
          echo "slug: '$SLUG'"       >> "posts/$FILENAME"
          echo "---"                 >> "posts/$FILENAME"
          echo ""                    >> "posts/$FILENAME"
          echo "<iframe src=\"https://www.youtube.com/embed/$YOUTUBE\" allowfullscreen></iframe>" >> "posts/$FILENAME"

          # Hacemos commit y push
          git add "posts/$FILENAME"
          git commit -m "Agregar post desde Issue: $TITLE"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
